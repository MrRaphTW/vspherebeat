Graphique CPU TimeLion
$capa=.es(index=vspherebeat*,q="vsphereType:Cluster",metric="sum:totalCPU",kibana=true).fit(mode="nearest"),$conso=.es(index=vspherebeat*,q="vsphereType:VirtualMachine",metric="sum:cpuLimit",kibana=true).if(eq,0,null),($capa).label("Capacity").yaxis(label="Number of cores"),($conso).trend(mode="linear").lines(10).color("#CCC").label("Evolution of CPU Assigned"),($conso).label("CPU assigned to VMs").title("CPU")
Grpahique RAM TimeLion
$capa=.es(index=vspherebeat*,q="vsphereType:Cluster",metric="sum:totalMemory",kibana=true).fit(mode="nearest").divide(1024).divide(1024).divide(1024),$conso=.es(index=vspherebeat*,q="vsphereType:VirtualMachine",metric="sum:memoryLimit",kibana=true).divide(1024).if(eq,0,null),($capa).label("Capacity").yaxis(label="GB of RAM"),($conso).trend(mode="linear").lines(10).color("#CCC").label("Evolution of RAM Assigned"),($conso).label("RAM assigned to VMs").title("RAM")
Graphique Storage TimeLion
$capa=.es(index=vspherebeat*,q="vsphereType:DataStore",metric="sum:capacity",kibana=true).fit(mode="nearest").divide(1024).divide(1024).divide(1024),$freespace=.es(index=vspherebeat*,q="vsphereType:DataStore",metric="sum:freeSpace",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),$conso=($capa).subtract($freespace),($capa).label("Capacity").yaxis(label="GB of DiskSpace"),($conso).trend(mode="linear").lines(10).color("#CCC").label("Evolution of Disk Space allocated"),($conso).label("DiskSpace Allocated").title("Storage")

Graphique OverAlloc Timelion
$capaCPU=.es(index=vspherebeat*,q="vsphereType:Cluster",metric="sum:totalCPU",kibana=true).if(eq,0,null),$consoCPU=.es(index=vspherebeat*,q="vsphereType:VirtualMachine",metric="sum:cpuLimit",kibana=true).if(eq,0,null),$overallocCPU=($consoCPU).divide($capaCPU).multiply(100),($overallocCPU).yaxis(label="% allocation",min=0).label("Evolution CPU Allocation").lines(10).color("#CCC").trend(mode="linear"),($overallocCPU).yaxis(label="% allocation",min=0).label("CPU Allocation"),$capaRAM=.es(index=vspherebeat*,q="vsphereType:Cluster",metric="sum:totalMemory",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),$consoRAM=.es(index=vspherebeat*,q="vsphereType:VirtualMachine",metric="sum:memoryLimit",kibana=true).divide(1024).if(eq,0,null),$overallocRAM=($consoRAM).divide($capaRAM).multiply(100),($overallocRAM).label("Evolution RAM Allocation").lines(10).color("#CCC").trend(mode="linear"),($overallocRAM).yaxis(label="% allocation",min=0).label("RAM Allocation"),$capaDisk=.es(index=vspherebeat*,q="vsphereType:DataStore",metric="sum:capacity",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),$freespaceDisk=.es(index=vspherebeat*,q="vsphereType:DataStore",metric="sum:freeSpace",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),$consoDisk=($capaDisk).subtract($freespaceDisk),$overallocDisk=($consoDisk).divide($capaDisk).multiply(100),($overallocDisk).label("Evolution Storage Allocation").lines(10).color("#CCC").trend(mode="linear"),($overallocDisk).yaxis(label="% allocation",min=0).label("Storage Allocation").title("Allocation")
Graphique NBVMs NBHosts timelion //TODO:readapt with the name here !
$nbhosts=.es(index=vspherebeat*,q="vsphereType:Cluster",metric="sum:nbHosts",kibana=true).if(eq,0,null),$nbvms=.es(index=vspherebeat*,q="vsphereType:VirtualMachine",metric="cardinality:cluster",kibana=true).if(eq,0,null),($nbhosts).trend(mode="linear").color("#CCC").lines(10).label("Hosts evolution"),($nbhosts).label("Hosts"),($nbvms).trend(mode="linear").color("#CCC").lines(10).label("VMs evolution"),($nbvms).label("VMs").title("VMs and Hosts")
