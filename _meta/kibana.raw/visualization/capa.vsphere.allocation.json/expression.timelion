$capaCPU=.es(index=vspherebeat*,q="vsphere_type:Cluster",metric="sum:total_cpu",kibana=true).if(eq,0,null),
$consoCPU=.es(index=vspherebeat*,q="vsphere_type:VirtualMachine",metric="sum:cpu_limit",kibana=true).if(eq,0,null),
$overallocCPU=($consoCPU).divide($capaCPU).multiply(100),
($overallocCPU).yaxis(label="% allocation",min=0).label("Evolution CPU Allocation").lines(10).color("#CCC").trend(mode="linear"),
($overallocCPU).yaxis(label="% allocation",min=0).label("CPU Allocation"),
$capaRAM=.es(index=vspherebeat*,q="vsphere_type:Cluster",metric="sum:total_memory",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),
$consoRAM=.es(index=vspherebeat*,q="vsphere_type:VirtualMachine",metric="sum:memory_limit",kibana=true).divide(1024).if(eq,0,null),
$overallocRAM=($consoRAM).divide($capaRAM).multiply(100),
($overallocRAM).label("Evolution RAM Allocation").lines(10).color("#CCC").trend(mode="linear"),
($overallocRAM).yaxis(label="% allocation",min=0).label("RAM Allocation"),
$capaDisk=.es(index=vspherebeat*,q="vsphere_type:DataStore",metric="sum:capacity",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),
$freespaceDisk=.es(index=vspherebeat*,q="vsphere_type:DataStore",metric="sum:free_space",kibana=true).divide(1024).divide(1024).divide(1024).if(eq,0,null),
$consoDisk=($capaDisk).subtract($freespaceDisk),$overallocDisk=($consoDisk).divide($capaDisk).multiply(100),
($overallocDisk).label("Evolution Storage Allocation").lines(10).color("#CCC").trend(mode="linear"),
($overallocDisk).yaxis(label="% allocation",min=0).label("Storage Allocation").title("Allocation")
