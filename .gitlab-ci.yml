stages:
  - test
  - build
  - publish

variables:
  DOCKER_DRIVER: overlay

cache:
  paths:
    - build/

services:
- docker:dind

before_script:
  - go get
  - make setup
  - make update
  - service docker start

test:
  stage: test
  script:
    - go get github.com/stretchr/testify/assert
    - make testsuite
  tags:
    - go

build:
  stage: build
  script:
    - make install-home
    - make package-setup
    - make package
  artifacts:
    paths:
      - build/upload/*
  only:
    - tags
  tags:
    - go

push_to_github:
    stage: publish
    before_script:
        - bash -c "git remote remove github; exit 0"
        - git status
    script:
        - git remote add github $GIT_HUB_URL
        - git config --global user.email "noreply@teamwork.net"
        - git config --global user.name "TeamWork"
        - git checkout master
        - git pull origin master
        - git status
        - bash -c "git push --force github master 2>&1 | grep -v github; echo $?"
        - git remote remove github

push_realease_to_github:
    stage: publish
    image: git.teamwork.net:5043/docker/github-release:latest
    before_script:
      - export GITHUB_TOKEN=${GIT_HUB_TOKEN}
      - echo "Deleting release from github before creating new one"
      - bash -c "github-release delete --user TeamWorkSI --repo vspherebeat --tag ${CI_BUILD_TAG}; exit 0"
    script:
      - export GITHUB_TOKEN=${GIT_HUB_TOKEN}
      - echo "Creating a new release in github"
      - github-release release --user TeamWorkSI --repo vspherebeat --tag "${CI_BUILD_TAG}" --name "${CI_BUILD_TAG}"

      - echo "Uploading the artifacts into github"
      - bash -c 'for file in $(ls build/upload/);do echo  github-release upload --user TeamWorkSI --repo vspherebeat --tag "${CI_BUILD_TAG}" --name "$file" --file "$file";done;'
    only:
      - tags
